//ирПортативный Перем ирПортативный Экспорт;
//ирПортативный Перем ирОбщий Экспорт;
//ирПортативный Перем ирСервер Экспорт;
//ирПортативный Перем ирКэш Экспорт;
//ирПортативный Перем ирКлиент Экспорт;

#Если Клиент Тогда
	
Перем мПлатформа Экспорт;
Перем мРежимыЗапускаПриложения;
Перем мРазрядностиПриложения;

Функция ОткрытьВыборВерсииПлатформы(Знач НачальноеЗначение = "", Знач ИмяКлюча = "СборкаПлатформы") Экспорт
	//! СборкиПлатформы.ВыгрузитьКолонку(ИмяКлюча);
	ТаблицаВерсий = СборкиПлатформы.Выгрузить(, "Application, CApplication, " + ИмяКлюча);
	ТекущаяСтрока = ТаблицаВерсий.Найти(НачальноеЗначение, ИмяКлюча);
	РезультатВыбора = ирКлиент.ОткрытьТаблицуЗначенийЛкс(ТаблицаВерсий, ТекущаяСтрока,, "Версии платформы", Истина,,,, ИмяКлюча);
	Возврат РезультатВыбора; // см. ТекущаяСтрока
КонецФункции

Функция РежимыЗапускаПриложения() Экспорт
	Если мРежимыЗапускаПриложения = Неопределено Тогда
		мРежимыЗапускаПриложения = ирОбщий.ТаблицаЗначенийИзТабличногоДокументаЛкс(ПолучитьМакет("РежимыЗапускаПриложения"));
	КонецЕсли;
	Возврат мРежимыЗапускаПриложения;
КонецФункции

Функция РазрядностиПриложения() Экспорт
	Если мРазрядностиПриложения = Неопределено Тогда
		мРазрядностиПриложения = ирОбщий.ТаблицаЗначенийИзТабличногоДокументаЛкс(ПолучитьМакет("РазрядностиПриложения"));
	КонецЕсли;
	Возврат мРазрядностиПриложения;
КонецФункции 

Функция ИмяБазовогоФайлаПортативного(Знач ВыбранныйКаталог = "") Экспорт
	Если ПустаяСтрока(ВыбранныйКаталог) Тогда
		ВыбранныйКаталог = КаталогПортативныхИнструментов;
	КонецЕсли;
	Файл = Новый Файл(ВыбранныйКаталог + ирОбщий.РазделительПутиКФайлуЛкс() + "ирПортативный.epf");
	Возврат Файл;
КонецФункции

#КонецЕсли

//ирПортативный лФайл = Новый Файл(ИспользуемоеИмяФайла);
//ирПортативный ПолноеИмяФайлаБазовогоМодуля = Лев(лФайл.Путь, СтрДлина(лФайл.Путь) - СтрДлина("Модули\")) + "ирПортативный.epf";
//ирПортативный #Если Клиент Тогда
//ирПортативный 	Контейнер = Новый Структура();
//ирПортативный 	Оповестить("ирПолучитьБазовуюФорму", Контейнер);
//ирПортативный 	Если Не Контейнер.Свойство("ирПортативный", ирПортативный) Тогда
//ирПортативный 		ирПортативный = ВнешниеОбработки.ПолучитьФорму(ПолноеИмяФайлаБазовогоМодуля);
//ирПортативный 		ирПортативный.Открыть();
//ирПортативный 	КонецЕсли; 
//ирПортативный #Иначе
//ирПортативный 	ирПортативный = ВнешниеОбработки.Создать(ПолноеИмяФайлаБазовогоМодуля, Ложь); // Это будет второй экземпляр объекта
//ирПортативный #КонецЕсли
//ирПортативный ирОбщий = ирПортативный.ОбщийМодульЛкс("ирОбщий");
//ирПортативный ирКэш = ирПортативный.ОбщийМодульЛкс("ирКэш");
//ирПортативный ирСервер = ирПортативный.ОбщийМодульЛкс("ирСервер");
//ирПортативный ирКлиент = ирПортативный.ОбщийМодульЛкс("ирКлиент");

мПлатформа = ирКэш.Получить();