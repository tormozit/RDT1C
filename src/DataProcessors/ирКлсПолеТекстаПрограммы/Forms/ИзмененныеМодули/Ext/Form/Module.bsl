Перем ПеречислениеТипСлова;
Перем РасширениеФайлаМодуля;

Процедура ПриОткрытии()
	мПлатформа.ЗагрузитьКэшМодулейВПамятьОС();
	ирКлиент.Форма_ПриОткрытииЛкс(ЭтаФорма);
	ирКлиент.ДопСвойстваЭлементаФормыЛкс(ЭтаФорма, ЭлементыФормы.ИзмененныеМодули).МенеджерПоиска = ирКлиент.СоздатьМенеджерПоискаВТабличномПолеЛкс(Новый Структура("Текст")); // Для отключения раскраски
	ЭтаФорма.ДатаОбновленияКэша = ирОбщий.ДатаОбновленияКэшаМодулейЛкс();
	ПодключитьОбработчикОжидания("ПриОткрытииОтложенно", 0.1, Истина); // - 0.1 не хватает при открытии из Турбоконфа
КонецПроцедуры

Процедура ПриОткрытииОтложенно()
	ОбновитьДанные();
КонецПроцедуры

Процедура ОбновитьДанные() Экспорт
	ТабличноеПолеСостояние = ирКлиент.ТабличноеПолеСостояниеСтрокЛкс(ЭлементыФормы.ИзмененныеМодули, "Модуль");
	ИзмененныеМодули.Очистить();
	ФайлыМодулей = НайтиФайлы(мПлатформа.ПапкаКэшаМодулей.ПолноеИмя, "*." + РасширениеФайлаМодуля, Истина);
	ТекстовыйДокументНовый = Новый ТекстовыйДокумент;
	ТекстовыйДокументСтарый = Новый ТекстовыйДокумент;
	Индикатор = ирОбщий.ПолучитьИндикаторПроцессаЛкс(ФайлыМодулей.Количество());
	Для Каждого Файл Из ФайлыМодулей Цикл
		ирОбщий.ОбработатьИндикаторЛкс(Индикатор);
		ФайлГита = Новый файл(ИмяФайлаМодуляВПапкеГита(Файл.ИмяБезРасширения, ПапкаГита));
		Если Не ФайлГита.Существует() Тогда
			Продолжить;
		КонецЕсли; 
		ТекстовыйДокументНовый.Прочитать(Файл.ПолноеИмя);
		ТекстовыйДокументСтарый.Прочитать(ФайлГита.ПолноеИмя, КодировкаТекста.UTF8);
		СтарыйТекст = ТекстовыйДокументСтарый.ПолучитьТекст();
		Если СтарыйТекст <> ТекстовыйДокументНовый.ПолучитьТекст() Тогда
			Строка = ИзмененныеМодули.Добавить();
			Строка.Модуль = Файл.ИмяБезРасширения;
			Строка.ФайлГита = ФайлГита.ПолноеИмя;
			Строка.ФайлКэша = Файл.ПолноеИмя;
			Строка.ДатаИзменения = Файл.ПолучитьВремяИзменения();
			Если Строка.Модуль = ПараметрИмяТекущегоМодуля Тогда
				ЭлементыФормы.ИзмененныеМодули.ТекущаяСтрока = Строка;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ИзмененныеМодули.Сортировать("Модуль");
	ЭтаФорма.ПараметрИмяТекущегоМодуля = "";
	ЭтаФорма.Количество = ИзмененныеМодули.Количество();
	ирОбщий.ОсвободитьИндикаторПроцессаЛкс();
	ирКлиент.ТабличноеПолеВосстановитьСостояниеСтрокЛкс(ЭлементыФормы.ИзмененныеМодули, ТабличноеПолеСостояние);
КонецПроцедуры

Процедура ПриЗакрытии()
	ирКлиент.Форма_ПриЗакрытииЛкс(ЭтаФорма);
КонецПроцедуры

Функция ТекстФайлаСтроки(Знач ВыбраннаяСтрока = Неопределено)
	Если ВыбраннаяСтрока = Неопределено Тогда
		ВыбраннаяСтрока = ЭлементыФормы.ИзмененныеМодули.ТекущаяСтрока;
	КонецЕсли;
	ФайлМодуля = мПлатформа.ФайлМодуляИзИмениМодуля(ВыбраннаяСтрока.Модуль);
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ФайлМодуля.ПолноеИмя);
	ТекстФайла = ТекстовыйДокумент.ПолучитьТекст();
	Возврат ТекстФайла;
КонецФункции

Процедура ВнешнееСобытие(Источник, Событие, Данные) Экспорт
	ирКлиент.Форма_ВнешнееСобытиеЛкс(ЭтаФорма, Источник, Событие, Данные);
КонецПроцедуры

Процедура ТабличноеПолеПриПолученииДанных(Элемент, ОформленияСтрок) Экспорт
	ирКлиент.ТабличноеПолеПриПолученииДанныхЛкс(ЭтаФорма, Элемент, ОформленияСтрок);
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник) Экспорт
	ирКлиент.Форма_ОбработкаОповещенияЛкс(ЭтаФорма, ИмяСобытия, Параметр, Источник);
КонецПроцедуры

Процедура КлсКомандаНажатие(Кнопка) Экспорт
	ирКлиент.УниверсальнаяКомандаФормыЛкс(ЭтаФорма, Кнопка);
КонецПроцедуры

Процедура НадписьКэшМодулейНажатие(Элемент)
	ПолучитьФорму("ФормаНастройки", ФормаВладелец).Открыть();
КонецПроцедуры

Процедура ИзмененныеМодулиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если Ложь
		Или Колонка = Элемент.Колонки.ФайлГита 
		Или Колонка = Элемент.Колонки.ФайлКэша 
	Тогда
		ирКлиент.ОткрытьФайлВПроводникеЛкс(ВыбраннаяСтрока[Колонка.Данные]);
	Иначе
		ТекстовыйДокументНовый = Новый ТекстовыйДокумент;
		ТекстовыйДокументСтарый = Новый ТекстовыйДокумент;
		ТекстовыйДокументНовый.Прочитать(ВыбраннаяСтрока.ФайлКэша);
		ТекстовыйДокументСтарый.Прочитать(ВыбраннаяСтрока.ФайлГита, КодировкаТекста.UTF8);
		ирКлиент.Сравнить2ЗначенияВФормеЛкс(ТекстовыйДокументСтарый, ТекстовыйДокументНовый,, "Гит (старый)", "Кэш (новый)",,, ВыбраннаяСтрока.Модуль,, "ВстроенныйЯзык", ВыбраннаяСтрока.Модуль);
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыОткрытьВКонфигураторе(Кнопка)
	Строка = ЭлементыФормы.ИзмененныеМодули.ТекущаяСтрока;
	Если Строка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Ссылка = ирКлиент.СсылкаНаМодульКонфигурацииЛкс(Строка.Модуль);
	ирКлиент.ОткрытьСсылкуВКонфигуратореЛкс(Ссылка);
КонецПроцедуры

Процедура ДействияФормыЗаменитьМодуль(Кнопка)
	Сообщить("Не реализовано");
КонецПроцедуры

Процедура ИзмененныеМодулиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.ФайлГита.УстановитьТекст("<Открыть>");
	ОформлениеСтроки.Ячейки.ФайлКэша.УстановитьТекст("<Открыть>");
	ирКлиент.ТабличноеПолеПриВыводеСтрокиЛкс(ЭтаФорма, Элемент, ОформлениеСтроки, ДанныеСтроки);
КонецПроцедуры

Процедура ПапкаГитаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(Элемент.Значение);
КонецПроцедуры

Процедура ИзмененныеМодулиПриАктивизацииСтроки(Элемент)
	ирКлиент.ТабличноеПолеПриАктивизацииСтрокиЛкс(ЭтаФорма, Элемент);
КонецПроцедуры

Процедура ДействияФормыОбновить(Кнопка)
	ОбновитьДанные();
КонецПроцедуры

Процедура ДействияФормыОткрытьФайлГитаВVSCode(Кнопка)
	ТекущаяСтрока = ЭлементыФормы.ИзмененныеМодули.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ОткрытьМодульВГите(ТекущаяСтрока.Модуль);
КонецПроцедуры

ирКлиент.ИнициироватьФормуЛкс(ЭтаФорма, "Обработка.ирКлсПолеТекстаПрограммы.Форма.ИзмененныеМодули");
Если мПлатформа = Неопределено Тогда
	ИнициироватьНеинтерактивно();
КонецЕсли;
РасширениеФайлаМодуля = "txt";
